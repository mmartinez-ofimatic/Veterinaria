<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bBuscarCliente.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="ColumnID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnProduct.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnPrecio.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnCantidad.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnDescuento.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnTotal.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="bBuscarProductos.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
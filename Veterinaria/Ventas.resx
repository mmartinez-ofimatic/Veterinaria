<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bBuscarProductos.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7z56V4ExVOBXgEw2bEaEI2sAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="ColumnID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnProduct.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="bBuscarCliente.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7z56V4ExVOBXgEw2bEaEI2sAAAAASUVORK5CYII=
</value>
  </data>
</root>